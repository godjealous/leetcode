class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        if(head==nullptr||head->next==nullptr||k<2) return head;
        ListNode* ptr=head;
        for(int i=0;i<k-1;i++)
        {
            ptr=ptr->next;
            if(ptr==nullptr) return head;
        }
        ListNode* p=ptr->next;
        ptr->next=nullptr;
        ListNode* pa=head,*pb=head->next;
        pa->next=reverseKGroup(p,k);
        while(pb!=nullptr)
        {
            swap(pa,pb->next);
            swap(pa,pb);
        }
        return pa;
    }
};
