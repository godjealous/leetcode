class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        if(matrix.empty()) return 0;
        int m=matrix.size();int n=matrix[0].size();
        vector<int> height(n,0);
        int ret=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]=='0')
                    height[j]=0;
                else
                    height[j]++;
            }
            ret=max(ret,maxheight(height));
        }
        return ret;
    }
    int maxheight(vector<int>& height)
    {
        stack<int> stk;
        height.push_back(0);
        int ret=0;
        for(int i=0;i<height.size();i++)
        {
            if(stk.empty()||height[i]>=height[stk.top()])
                stk.push(i);
            else
            {
                while(!stk.empty()&&height[i]<height[stk.top()])
                {
                    int h=height[stk.top()];
                    stk.pop();
                    int left;
                    if(stk.empty()) left=-1;
                    else left=stk.top();
                    ret=max(ret,(i-left+1-2)*h);
                }
                stk.push(i);    
            }
        }
        height.pop_back();
        return ret;
    }
};
