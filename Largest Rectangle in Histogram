class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        int n=height.size();
        if(n==0) return 0;
        height.push_back(0);//this is treat as a shaobing bianliang
        stack<int> stk;
        int maxlen=0;
        for(int i=0;i<height.size();i++)
        {
            if(stk.empty()||height[i]>=height[stk.top()])
                stk.push(i);
            else
            {
                while(!stk.empty()&&height[stk.top()]>height[i])
                {
                    int h=height[stk.top()];
                    stk.pop();
                    int idx;
                    if(stk.empty()) idx=-1;
                    else idx=stk.top();
                    maxlen=max(maxlen,h*(i-idx+1-2));
                }
                stk.push(i);
            }
        }
        return maxlen;
    }
};
