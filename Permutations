class Solution {
public:
    vector<vector<int> > permute(vector<int> &num) {
        vector<vector<int> > ret;
        if(num.size()==0) return ret;
        sort(num.begin(),num.end());
        vector<int> f(num.size());
        int n=num.size();
        solve(num,f,n,0,ret);
        return ret;
    }
    void solve(vector<int>& num,vector<int>& f,int n,int cur,vector<vector<int> >& ret)
    {
        if(cur==n)
        {
            ret.push_back(f);
        }
        else
        {
            for(int i=0;i<n;i++)
            {
                int target=num[i];
                if(i!=0&&target==num[i-1]) continue;
                int total=0,used=0;
                for(int j=0;j<n;j++)
                    if(num[j]==target)
                        total++;
                for(int j=0;j<cur;j++)
                    if(f[j]==target)
                        used++;
                if(used<total)
                {
                    f[cur]=target;
                    solve(num,f,n,cur+1,ret);
                }
            }
        }
    }
};
