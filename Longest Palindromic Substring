class Solution {
public:
    string longestPalindrome(string s) {
        if(s.empty()) return "";
        string str=precompute(s);
        int n=str.size();
        vector<int> f(n,0);
        int idx=0;int last=0;
        f[0]=1;
        int maxlen=1,maxid=0;
        for(int i=1;i<n-1;i++)
        {
            if(i<=last)
            {
                f[i]=min(f[2*idx-i],last-i+1);
            }
            while(str[i+f[i]]==str[i-f[i]])
                f[i]++;
            if(i+f[i]-1>last)
            {
                last=i+f[i]-1;
                idx=i;
            }
            if(f[i]>maxlen)
            {
                maxlen=f[i];
                maxid=i;
            }
        }
        string ret;int i;
        if(str.substr(maxid,1)=="#"){ret+="";i=2;}
        else {ret+=str[maxid];i=3;}
        for(;i<=f[maxid];i+=2)
            ret=str[maxid+i-1]+ret+str[maxid+i-1];
        return ret;
    }
    string precompute(string s)
    {
        string str="^#";
        for(int i=0;i<s.size();i++)
            str+=(s.substr(i,1)+"#");
        str+="$";
        return str;
    }
};
